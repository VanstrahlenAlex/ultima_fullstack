// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    output   = "../generated/prisma"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id    Int    @id @default(autoincrement())
    name  String
    email String @unique
    meal  Meal[]
	role Role 
	//Date
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum Role {
	USER
	ADMIN
}

model Food {
    id            Int    @id @default(autoincrement())
    name          String @unique
    calories      Float?
    protein       Float?
    fat           Float?
    carbohydrates Float?
    fiber         Float?
    sugar         Float?

    Category         Category?         @relation(fields: [categoryId], references: [id])
    categoryId       Int?
    foodServingUnits FoodServingUnit[]
    meal             Meal?             @relation(fields: [mealId], references: [id])
    mealId           Int?

    //Date
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    MealFood MealFood[]
}

model Category {
    id    Int    @id @default(autoincrement())
    name  String @unique
    foods Food[]

    //Date
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model ServingUnit {
    id               Int               @id @default(autoincrement())
    name             String            @unique
    foodServingUnits FoodServingUnit[]

    //Date
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    MealFood MealFood[]
}

model FoodServingUnit {
    id            Int         @id @default(autoincrement())
    food          Food        @relation(fields: [foodId], references: [id])
    foodId        Int
    servingUnit   ServingUnit @relation(fields: [servingUnitId], references: [id])
    servingUnitId Int
    grams         Float?

    //Date
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Meal {
    id       Int      @id @default(autoincrement())
    dateTime DateTime @default(now())
    foods    Food[]
    user     User     @relation(fields: [userId], references: [id])
    userId   Int

    //Date
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    MealFood MealFood[]
}

model MealFood {
    id            Int         @id @default(autoincrement())
    food          Food        @relation(fields: [foodId], references: [id])
    foodId        Int
    meal          Meal        @relation(fields: [mealId], references: [id])
    mealId        Int
    servingUnit   ServingUnit @relation(fields: [servingUnitId], references: [id])
    servingUnitId Int
    amount        Float

	//Date
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
